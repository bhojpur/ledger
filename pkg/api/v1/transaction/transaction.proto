syntax = "proto3";

// Copyright (c) 2018 Bhojpur Consulting Private Limited, India. All rights reserved.

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

package v1.transaction;

option go_package = "github.com/bhojpur/ledger/pkg/api/v1/transaction;transaction";

service Transactor {
  rpc AddTransaction(TransactionRequest) returns (TransactionResponse) {}
  rpc DeleteTransaction(DeleteRequest) returns (TransactionResponse) {}
  rpc VoidTransaction(DeleteRequest) returns (TransactionResponse) {}
  rpc NodeVersion(VersionRequest) returns (VersionResponse) {}
  rpc AddTag(AccountTagRequest) returns (TransactionResponse) {}
  rpc DeleteTag(DeleteAccountTagRequest) returns (TransactionResponse) {}
  rpc AddCurrency(CurrencyRequest) returns (TransactionResponse) {}
  rpc DeleteCurrency(DeleteCurrencyRequest) returns (TransactionResponse) {}
  rpc GetTB(TBRequest) returns (TBResponse) {}
  rpc GetListing(ReportRequest) returns (ListingResponse) {}
  rpc AddAccount(AccountTagRequest) returns (TransactionResponse) {}
  rpc DeleteAccount(DeleteAccountTagRequest) returns (TransactionResponse) {}
  rpc ReconcileTransactions(ReconciliationRequest) returns (TransactionResponse) {}
}

message LineItem {
  string accountname = 1;
  string description = 2;
  string currency = 3;
  int64 amount = 4;
}

message Transaction {
    string date = 1;
    string description = 2;
    repeated LineItem lines = 3;
}

message TransactionRequest {
    string date = 1;
    string description = 2;
    repeated LineItem lines = 3;
}

message DeleteRequest {
    string identifier = 1;
}

message TransactionResponse {
    string message = 1;
}

message AccountTagRequest {
    string account = 1;
    repeated string tag = 2;
}

message DeleteAccountTagRequest {
    string account = 1;
    repeated string tag = 2;
}

message CurrencyRequest {
    string currency = 1;
    int64 decimals = 2;
}

message DeleteCurrencyRequest {
    string currency = 1;
}

message TBLine {
  string accountname = 1;
  repeated string tags = 2;
  int64 amount = 3;
  string currency = 4;
  int64 decimals = 5;
  string amountStr = 6;
}

message TBRequest {
    string date = 1;
}
message ReportRequest {
    string date = 1;
    string startdate = 2;
}

message TBResponse {
    repeated TBLine lines = 1;
}

message ListingResponse {
    repeated Transaction transactions = 1;
}

message ReconciliationRequest {
    repeated string splitID = 1;
}

message VersionRequest {
    string message = 1;
}

message VersionResponse {
    string message = 1;
}