apiVersion: v1
kind: Service
metadata:
  name: ledger
  namespace: ledger
spec:
  type: NodePort
  selector:
    app: ledger
    role: server
  ports:
  - port: 8080
    targetPort: 8080
    nodePort: 30080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ledger
  namespace: ledger
  labels:
    app: ledger
    role: server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ledger
      role: server
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: ledger
        role: server
    spec:
      containers:
      - name: ledger
        image: ledger:latest
        imagePullPolicy: Never # change this when deploying to a real cluster
        ports:
        - containerPort: 8080
        env:
        - name: MYSQL_DATABASE
          value: ledger
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: mysql-creds
              key: ledger_user
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-creds
              key: ledger_pass
        - name: WAIT_HOSTS
          value: mysql:3306
        - name: WAIT_HOSTS_TIMEOUT
          value: '300'
        - name: WAIT_SLEEP_INTERVAL
          value: '10'
        - name: WAIT_HOST_CONNECT_TIMEOUT
          value: '10'
        command:
        - ./wait_entrypoint.sh # delays server start until mysql is responding on port 3306
        - ./ledgersvr
        - --verbosity=debug
        - --rpc-host=0.0.0.0 # listen to traffic from all ips
        - --rpc-port=8080
        - --datadir=/var/lib/ledger
        - --config=/var/lib/ledger/config.toml
        - --database=mysql
        - "--database-location=$(MYSQL_USER):$(MYSQL_PASSWORD)@tcp(mysql:3306)/$(MYSQL_DATABASE)?charset=utf8mb4,utf8"
      restartPolicy: Always
      terminationGracePeriodSeconds: 10